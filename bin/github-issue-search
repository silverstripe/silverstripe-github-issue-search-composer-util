#!/usr/bin/env php
<?php

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

use Silverstripe\GithubIssueSearch\Util\UrlGenerator;

// Try to read from stdin
stream_set_blocking(STDIN, 0);
$lockfileStr = stream_get_contents(STDIN);

// Fall back to lockfile autodiscovery
if (!$lockfileStr) {
    $lockfilePaths = [
        // bin/<script>
        __DIR__ . '/../composer.lock',
        // vendor/bin/<script>
        __DIR__ . '/../../composer.lock',
        // vendor/my/vendor/bin/<script>
        __DIR__ . '/../../../../composer.lock',
    ];
    foreach ($lockfilePaths as $lockfilePath) {
        if (file_exists($lockfilePath)) {
            $lockfileStr = file_get_contents($lockfilePath);
        }
    }
}

if (!$lockfileStr) {
    echo "Could not read a lockfile from stdin or find it in the project context" . PHP_EOL;
    exit(1);
}

$gen = new UrlGenerator();
echo $gen->generate($lockfileStr);